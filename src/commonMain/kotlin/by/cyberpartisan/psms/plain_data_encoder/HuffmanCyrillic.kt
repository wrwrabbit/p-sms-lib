package by.cyberpartisan.psms.plain_data_encoder

class HuffmanCyrillic() : HuffmanEncoder() {
    override val charToCode: Map<Char, Code> = mapOf(
        'д' to Code(0b11111, 5),
        'б' to Code(0b111101, 6),
        'ь' to Code(0b111100, 6),
        'т' to Code(0b1110, 4),
        'к' to Code(0b11011, 5),
        'ж' to Code(0b1101011, 7),
        'G' to Code(0b1101010111111, 13),
        'B' to Code(0b1101010111110, 13),
        'y' to Code(0b1101010111101, 13),
        '/' to Code(0b1101010111100, 13),
        'l' to Code(0b11010101110, 11),
        'Л' to Code(0b11010101101, 11),
        'I' to Code(0b110101011001, 12),
        'Ш' to Code(0b110101011000, 12),
        'С' to Code(0b110101010, 9),
        'В' to Code(0b110101001, 9),
        'd' to Code(0b110101000111, 12),
        'm' to Code(0b110101000110, 12),
        'Е' to Code(0b11010100010, 11),
        '5' to Code(0b11010100001, 11),
        'n' to Code(0b11010100000, 11),
        'ы' to Code(0b110100, 6),
        'а' to Code(0b1100, 4),
        'с' to Code(0b1011, 4),
        'м' to Code(0b10101, 5),
        'з' to Code(0b101001, 6),
        'г' to Code(0b101000, 6),
        'и' to Code(0b1001, 4),
        'щ' to Code(0b10001111, 8),
        'О' to Code(0b1000111011, 10),
        'Р' to Code(0b1000111010, 10),
        '2' to Code(0b1000111001, 10),
        'Х' to Code(0b100011100011, 12),
        'O' to Code(0b10001110001011, 14),
        'L' to Code(0b10001110001010, 14),
        'M' to Code(0b1000111000100, 13),
        '"' to Code(0b10001110000, 11),
        'Ж' to Code(0b1000110111111, 13),
        '$' to Code(0b1000110111110111, 16),
        'Ы' to Code(0b1000110111110110, 16),
        '’' to Code(0b1000110111110101, 16),
        'Q' to Code(0b1000110111110100, 16),
        'Ё' to Code(0b10001101111100111, 17),
        'q' to Code(0b10001101111100110, 17),
        '\'' to Code(0b1000110111110010, 16),
        'K' to Code(0b100011011111000, 15),
        'h' to Code(0b100011011110, 12),
        '4' to Code(0b10001101110, 11),
        'И' to Code(0b1000110110, 10),
        's' to Code(0b10001101011, 11),
        'x' to Code(0b10001101010111, 14),
        'Й' to Code(0b100011010101101, 15),
        '=' to Code(0b100011010101100, 15),
        '%' to Code(0b1000110101010, 13),
        'Я' to Code(0b100011010100, 12),
        'e' to Code(0b1000110100, 10),
        'ш' to Code(0b10001100, 8),
        'o' to Code(0b1000101111, 10),
        'Д' to Code(0b1000101110, 10),
        'П' to Code(0b100010110, 9),
        '-' to Code(0b100010101, 9),
        ';' to Code(0b100010100111, 12),
        'c' to Code(0b100010100110, 12),
        'A' to Code(0b1000101001011, 13),
        'Y' to Code(0b100010100101011, 15),
        '№' to Code(0b100010100101010, 15),
        'V' to Code(0b10001010010100, 14),
        'Z' to Code(0b10001010010011111, 17),
        'Щ' to Code(0b10001010010011110, 17),
        'І' to Code(0b100010100100111011, 18),
        'ў' to Code(0b10001010010011101011, 20),
        'Ў' to Code(0b10001010010011101010, 20),
        'і' to Code(0b10001010010011101001, 20),
        '@' to Code(0b10001010010011101000, 20),
        '>' to Code(0b10001010010011100, 17),
        'U' to Code(0b100010100100110, 15),
        'R' to Code(0b10001010010010, 14),
        'T' to Code(0b1000101001000, 13),
        'r' to Code(0b10001010001, 11),
        'Ч' to Code(0b100010100001, 12),
        '!' to Code(0b100010100000, 12),
        '\n' to Code(0b1000100, 7),
        'я' to Code(0b100001, 6),
        '.' to Code(0b1000001, 7),
        'ц' to Code(0b10000001, 8),
        'э' to Code(0b100000001, 9),
        'А' to Code(0b1000000001, 10),
        ')' to Code(0b1000000000, 10),
        'в' to Code(0b0111, 4),
        'у' to Code(0b01101, 5),
        'й' to Code(0b011001, 6),
        'ч' to Code(0b011000, 6),
        'о' to Code(0b010, 3),
        'е' to Code(0b0011, 4),
        'р' to Code(0b00101, 5),
        'п' to Code(0b001001, 6),
        'ю' to Code(0b00100011, 8),
        '9' to Code(0b00100010111, 11),
        'i' to Code(0b00100010110, 11),
        'К' to Code(0b0010001010, 10),
        'a' to Code(0b00100010011, 11),
        'D' to Code(0b00100010010111, 14),
        'v' to Code(0b00100010010110, 14),
        'E' to Code(0b00100010010101, 14),
        'w' to Code(0b00100010010100, 14),
        'p' to Code(0b0010001001001, 13),
        'z' to Code(0b001000100100011, 15),
        'H' to Code(0b001000100100010, 15),
        'Ю' to Code(0b00100010010000, 14),
        'Б' to Code(0b00100010001, 11),
        ':' to Code(0b00100010000, 11),
        'Г' to Code(0b00100001111, 11),
        'F' to Code(0b00100001110111, 14),
        '&' to Code(0b00100001110110111, 17),
        'Ь' to Code(0b00100001110110110, 17),
        '[' to Code(0b0010000111011010, 16),
        ']' to Code(0b0010000111011001, 16),
        '+' to Code(0b0010000111011000, 16),
        'C' to Code(0b0010000111010, 13),
        'u' to Code(0b001000011100, 12),
        'Н' to Code(0b0010000110, 10),
        '0' to Code(0b0010000101, 10),
        '1' to Code(0b0010000100, 10),
        'ф' to Code(0b001000001, 9),
        '?' to Code(0b001000000111, 12),
        '6' to Code(0b001000000110, 12),
        'g' to Code(0b0010000001011, 13),
        'Ц' to Code(0b00100000010101, 14),
        'f' to Code(0b00100000010100, 14),
        'Э' to Code(0b001000000100, 12),
        '7' to Code(0b001000000011, 12),
        'З' to Code(0b001000000010, 12),
        '8' to Code(0b001000000001, 12),
        'У' to Code(0b001000000000, 12),
        'н' to Code(0b00011, 5),
        ',' to Code(0b0001011, 7),
        'ё' to Code(0b0001010111, 10),
        'N' to Code(0b00010101101111, 14),
        'X' to Code(0b00010101101110, 14),
        'S' to Code(0b0001010110110, 13),
        'ъ' to Code(0b000101011010, 12),
        'Т' to Code(0b00010101100, 11),
        't' to Code(0b000101010111, 12),
        'Ф' to Code(0b000101010110, 12),
        '3' to Code(0b000101010101, 12),
        'k' to Code(0b00010101010011, 14),
        'b' to Code(0b00010101010010, 14),
        'W' to Code(0b000101010100011, 15),
        'J' to Code(0b0001010101000101, 16),
        '*' to Code(0b00010101010001001, 17),
        'j' to Code(0b00010101010001000, 17),
        'P' to Code(0b00010101010000, 14),
        'М' to Code(0b00010101001, 11),
        '(' to Code(0b00010101000, 11),
        'х' to Code(0b00010100, 8),
        'л' to Code(0b000100, 6),
        ' ' to Code(0b0000, 4),
    )

    override fun getMode(): Int = Mode.HUFFMAN_CYRILLIC.ordinal
}